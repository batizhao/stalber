package ${package}.${moduleName}.domain;

import com.baomidou.mybatisplus.annotation.TableName;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.experimental.Accessors;
#if($template == "tree")
import me.batizhao.common.core.domain.TreeNode;
#end
#if($workflow == "yes")
import me.batizhao.terrace.task.Task;
#end

import java.io.Serializable;
import java.time.LocalDateTime;

/**
 * ${comments} 实体对象
 *
 * @author ${author} 
 * @since ${date}
 */
@Data
@Accessors(chain = true)
@NoArgsConstructor
@Schema(description = "${comments}")
@TableName("${tableName}")
public class ${className}#if($template == "tree") extends TreeNode#end implements Serializable {

    private static final long serialVersionUID = 1L;

#if($template == "tree")
    public ${className}(Integer id, Integer pid) {
        this.id = id;
        this.pid = pid;
    }
#end
#if($workflow == "yes")

    /**
     * 流程属性
     */
    @Schema(description="流程属性")
    private transient Task task;
#end
#foreach ($column in $columns)
    #if($template == "tree")
        #if($column.javaField == "id" || $column.javaField == "pid")
        #else

    /**
     * $column.comment
     */
    @Schema(description="$column.comment")
    private $column.javaType $column.javaField;
        #end
    #else

    /**
     * $column.comment
     */
    @Schema(description="$column.comment")
    private $column.javaType $column.javaField;
    #end

    #if (${column.config})
        #set ($jf = ${column.javaField})
        #set ($jf = $jf.substring(0,1).toUpperCase() + ${jf.substring(1)})
    /**
     * ${column.comment}数据
     */
    @Data
    @Accessors(chain = true)
    @NoArgsConstructor
    @Schema(description = "${column.comment}数据")
    public static class ${jf}Data {

        #foreach($configItem in ${column.config})

        /**
         * ${configItem.comment}
         */
        @Schema(description="${configItem.comment}")
        private ${configItem.type} ${configItem.name};
        #end
    }
    #end
#end

}
